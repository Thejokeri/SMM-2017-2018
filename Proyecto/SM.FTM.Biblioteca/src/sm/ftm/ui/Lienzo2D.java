/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sm.ftm.ui;


import java.util.List;
import java.awt.Graphics;
import sm.ftm.graficos.*;
import java.util.ArrayList;
import java.awt.Graphics2D;
import java.awt.geom.Point2D;

/**
 *
 * @author thejoker
 */
public class Lienzo2D extends javax.swing.JPanel {

    /**
     * Creates new form Lienzo2D
     */
    public Lienzo2D() {
        initComponents();
        
        this.vShape = new ArrayList();
        this.s = new sm.ftm.graficos.Shape();
    }

    /**
     * @return the s
     */
    public sm.ftm.graficos.Shape getShape() {
        return s;
    }

    /**
     * @param s the s to set
     */
    public void setShape(sm.ftm.graficos.Shape s) {
        this.s = s;
    }
    
    @Override
    public void paint(Graphics g){
        super.paint(g);
        Graphics2D g2d = (Graphics2D) g;
        
        for (sm.ftm.graficos.Shape shape : vShape) {
            shape.draw(g2d);
        }
    }
    
    public Shape getSelectedShape(Point2D p){
        for(sm.ftm.graficos.Shape sv:vShape){
            if(sv.contains(p))
                return sv;
              
            if(s instanceof Linea){
                if(((Linea)s).contains(p)){
                    return sv;
                }   
            } 
        }
        
        return null;
    }
    
    public sm.ftm.graficos.Shape CreateShape(Point2D pi, Point2D pf){  
        sm.ftm.graficos.Shape s = null;
        
        switch(this.getShape().getForma()){
            case POINT:
                    s = new Punto(getShape(),pi);
                break;
            case LINE:
                    s = new Linea(getShape(),pi,pf);
                break;
            case RECTANGLE:
                    s = new Rectangulo(getShape(),pi,pf);
                break;
            case ELLIPSE:
                    s = new Elipse(getShape(),pi,pf);
                break;
        }
        
        return s;
    }
    
    public void UpdateShape(Point2D pf){
        switch(this.getShape().getForma()){
            case LINE:
                    ((Linea)this.getShape()).setPF(pf);
                break;
            case RECTANGLE:
                    ((Rectangulo)this.getShape()).setPf(pf);
                break;
            case ELLIPSE:
                    ((Elipse)this.getShape()).setPf(pf);
                break;
        }
    }
    
    /*public void UpdatePositionShape(Point2D p){ 
        if(getShape() instanceof Punto){
            ((Punto)getShape()).setLocation(p);
        }
        
        if(getS() instanceof Linea){
            ((Linea)getShape()).setLocation(p);
        }
        
        if(getS() instanceof Rectangulo){
            ((Rectangulo)getShape()).setLocation(p);
        }
        
        if(getS() instanceof Elipse){
            ((Elipse)getShape()).setLocation(p);
        }
    }*/
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        /*if(editar){
            this.s = this.getSelectedShape(evt.getPoint());
        }else{*/
            pAux = evt.getPoint();
            this.s = this.CreateShape(pAux, pAux);
            vShape.add(this.s);
        //}
    }//GEN-LAST:event_formMousePressed

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        /*if(editar){
            if(this.s != null){
                this.UpdatePositionShape(evt.getPoint());
            }    
        }else*/
            this.UpdateShape(evt.getPoint());
        this.repaint();
    }//GEN-LAST:event_formMouseDragged

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased
        this.formMouseDragged(evt);
    }//GEN-LAST:event_formMouseReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    private Point2D pAux;
    private List<sm.ftm.graficos.Shape> vShape;
    private sm.ftm.graficos.Shape s;
}
