/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package aplicacion;

import java.awt.*;
import java.awt.font.TextAttribute;
import java.awt.geom.*;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

/**
 *
 * @author thejoker
 */
public class Lienzo extends javax.swing.JPanel {

    //Line2D l;
    Rectangle rect;
    private Point pAux;
    List<Shape> vShape;
    boolean editar;
    
    /**
     * Creates new form Lienzo
     */
    public Lienzo() {
        this.vShape = new ArrayList();
        initComponents();
    }

    @Override
    public void paint(Graphics g){
        super.paint(g);
        Graphics2D g2d = (Graphics2D)g;
        
        this.setAtributos(g2d);
        
        for(Shape s:vShape)
            g2d.draw(s);
       
    }
    
    private void setAtributos(Graphics2D g2d){
        //Trazo
        Stroke trazo;
        float patronDiscontinuidad[] = {15.0f, 15.0f};
        trazo = new BasicStroke(10.0f, BasicStroke.CAP_ROUND, BasicStroke.JOIN_MITER, 1.0f, patronDiscontinuidad, 0.0f);
        g2d.setStroke(trazo);
        
        g2d.draw(new Line2D.Float(40,40,160,160));
        
        //Relleno
        Paint relleno;
        relleno = new Color(255, 100, 0);
        g2d.setPaint(relleno);
        
        g2d.draw(new Rectangle(170,40,120,120));
        g2d.fill(new Rectangle(300,40,120,120));
        
        Point pc1 = new Point(430,40), pc2 = new Point(550,160);
        relleno = new GradientPaint(pc1, Color.RED, pc2, Color.BLUE);
        g2d.setPaint(relleno);
        g2d.fill(new Rectangle(430,40,120,120));
        
        //Composición
        Composite comp;
        comp = AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 0.5f);
        g2d.setComposite(comp);
        
        g2d.fill(new Rectangle(190, 100, 200, 120));
        
        //Transformación
        Rectangle r = new Rectangle(430, 190, 120, 120);
        g2d.draw(r); //Dibujamos rectángulo sin transformación
        
        AffineTransform at;
        at = AffineTransform.getRotateInstance(Math.toRadians(45.0), r.getCenterX(), r.getCenterY());
        
        at.setToIdentity();
        at.translate(r.getCenterX(),r.getCenterY());
        at.scale(0.5,0.5);
        at.translate(-r.getCenterX(),-r.getCenterY());
        
        g2d.setTransform(at);
        
        g2d.fill(r); //Dibujamos rectángulo con transformación
        
        at.setToIdentity();
        g2d.setTransform(at);
        
        //Fuente
        Font fuente;
        fuente = new Font("Arial", Font.BOLD | Font.ITALIC, 45);
        g2d.setFont(fuente);
        
        g2d.drawString("Hola", 30, 220);
        
        Map atributosTexto = fuente.getAttributes();
        atributosTexto.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
        g2d.setFont( new Font(atributosTexto) );
        g2d.drawString("mundo", 30, 260);
        
        //Renderización
        RenderingHints render;
        g2d.draw(new Ellipse2D.Float(40,350,510,50));
        render = new RenderingHints(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        render.put(RenderingHints.KEY_COLOR_RENDERING, RenderingHints.VALUE_COLOR_RENDER_QUALITY);
        g2d.setRenderingHints(render);
        
        g2d.draw(new Ellipse2D.Float(40,450,510,50)); //Elipse con antialiasing
        g2d.drawString("Hola", 30, 170);
        
        //Recorte
        Shape clipArea;
        clipArea = new Ellipse2D.Float(100,100,500,500);
        g2d.setClip(clipArea);
        g2d.draw(clipArea);
        
    }
    
    private Shape getSelectedShape(Point2D p){
        for(Shape s:vShape)
            if(s.contains(p))
                return s;
        
        return null;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        //l = new Line2D.Float(evt.getPoint(), evt.getPoint());
        if(editar){
            rect = (Rectangle) this.getSelectedShape(evt.getPoint());
        }else{
            pAux = evt.getPoint();
            rect = new Rectangle(pAux);
            //vShape.add(l);
            vShape.add(rect);
        }
    }//GEN-LAST:event_formMousePressed

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        //l.setLine(l.getP1(),evt.getPoint());
        if(editar){
            if(rect != null)
                rect.setLocation(evt.getPoint());
        }else
            rect.setFrameFromDiagonal(pAux, evt.getPoint());
      
        this.repaint();
    }//GEN-LAST:event_formMouseDragged

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased
        //l.setLine(l.getP1(),evt.getPoint());
        
        this. formMouseDragged(evt);
        this.repaint();
    }//GEN-LAST:event_formMouseReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
